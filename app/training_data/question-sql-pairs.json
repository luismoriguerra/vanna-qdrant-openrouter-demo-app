[
    {
        "ddl":"create or replace TABLE ANALYTICS.SILVER_FACT.CROWD_DEV_ACTIVITIES ( ACTIVITY_ID VARCHAR(256) COMMENT 'Unique identifier for each activity. Example: ''515fba60-3897-11ef-a780-5bea025eade1''', ACTIVITY_TS TIMESTAMP_TZ(9) COMMENT 'Timestamp of the activity. Example: ''2023-04-15 14:30:00''', ACTIVITY_TYPE VARCHAR(256) COMMENT 'Type of the activity. Available types include: answer, approved-commit, authored-commit, certificate_issued, changeset-abandoned, changeset-created, changeset-merged, changeset_comment-created, channel_joined, co-authored-commit, comment, committed-commit, create_topic, discussion-comment, discussion-started, enrolled_into_certification, enrolled_into_e-learning, enrolled_into_instructor-led, fork, hashtag, influenced-commit, informed-commit, issue-comment, issues-closed, issues-opened, joined_guild, member_join, member_leave, mention, merge_request-assigned, merge_request-closed, merge_request-comment, merge_request-opened, merge_request-review-approved, merge_request-review-requested, message, message_in_topic, patchset-created, patchset_approval-created, patchset_comment-created, post, pull_request-assigned, pull_request-closed, pull_request-comment, pull_request-merged, pull_request-opened, pull_request-review-requested, pull_request-review-thread-comment, pull_request-reviewed, question, reaction, registered, registered_as_attendee, registered_as_speaker, reported-commit, resolved-commit, reviewed-commit, signed-off-commit, star, tested-commit, unstar\n', ACTIVITY_DATE DATE COMMENT 'Date of the activity. Example: ''2023-04-15''', ACTIVITY_CATEGORY VARCHAR(21) COMMENT 'Category of the activity. Examples: ''Issue'', ''Change Set'', ''Commit'', ''Pull Request'', ''Review'', ''Patch Set'', ''Groupsio'', ''others''', MEMBER_ID VARCHAR(256) COMMENT 'Unique identifier for the member performing the activity. Example: ''2ecfb9a0-4054-11ee-b756-21ab04a021b3''', MEMBER_EMAIL VARCHAR(16777216) COMMENT 'Email address of the member. Example: ''user@example.com''', MEMBER_DOMAIN VARCHAR(16777216) COMMENT 'Domain of the member''s email. Example: ''example.com''', MEMBER_IS_BOT BOOLEAN COMMENT 'Flag indicating if the member is a bot. Example: false', MEMBER_COUNTRY VARCHAR(16777216) COMMENT 'Country of the member. Example: ''United States''', MEMBER_LOGO VARCHAR(16777216) COMMENT 'URL of the member''s logo. Example: ''https://avatars.githubusercontent.com/u/5325140?v=4''', MEMBER_IS_LFX_TENANT BOOLEAN COMMENT 'Flag indicating if the member is an LFX tenant. Example: true', MEMBER_DISPLAY_NAME VARCHAR(16777216) COMMENT 'Display name of the member. Example: ''John Doe''', GITHUB_USERNAME VARCHAR(16777216) COMMENT 'GitHub username of the member. Example: ''johndoe''', PLATFORM VARCHAR(256) COMMENT 'Platform where the activity occurred. Example: ''GitHub, twitter, linkedin, etc..''', CHANNEL VARCHAR(256) COMMENT 'Channel of the activity. Example: ''https://github.com/fluxcd/flagger''', SOURCE_ID VARCHAR(256) COMMENT 'ID of the activity source. Example: ''MDU6SXNzdWU3NzcwNDA3NDM=''', SOURCE_PARENT_ID VARCHAR(1020) COMMENT 'Parent ID of the activity source. Example: ''PR_kwDODhKIWM5w9YI_''', CONVERSATION_ID VARCHAR(256) COMMENT 'ID of the conversation related to the activity. Example: ''31095f20-1e41-11ef-9dd7-d9ba88865703''', REPOSITORY_URL VARCHAR(16777216) COMMENT 'URL of the repository. Example: ''https://github.com/org/repo''', IS_REPOSITORY_URL BOOLEAN COMMENT 'Flag indicating if the repository URL is valid. Example: true', COMMIT_ID VARCHAR(16777216) COMMENT 'ID of the commit. Example: ''bcca62c590917fbdf691e0a5979e417ee45ff978''', PULL_REQUEST_ID VARCHAR(16777216) COMMENT 'ID of the pull request. Example: ''https://github.com/example/website/pull/241''', ISSUE_ID VARCHAR(16777216) COMMENT 'ID of the issue. Example: ''https://github.com/example/website/issues/30''', REVIEW_ID VARCHAR(16777216) COMMENT 'ID of the review. Example: ''https://github.com/example/pull/249772f259fc0-6f91-11ee-bf86-53ba1027eb05''', CHANGESET_ID VARCHAR(16777216) COMMENT 'ID of the changeset. Example: ''cs_901234''', PATCHSET_ID VARCHAR(16777216) COMMENT 'ID of the patchset. Example: ''ps_567890''', IS_CODE_CONTRIBUTION_ACTIVITY BOOLEAN COMMENT 'Flag indicating if the activity is a code contribution. Example: true', IS_LFX_TENANT BOOLEAN COMMENT 'Flag indicating if the activity is from an LFX tenant. Example: true', PARENT_ID VARCHAR(256) COMMENT 'ID of the parent activity. Example: ''f0e51dd1-f65e-11ee-82cf-dfd1e3b701cb''', USER_STATUS VARCHAR(16777216) COMMENT 'Status of the user.', SENTIMENT_SCORE NUMBER(38,0) COMMENT 'Sentiment score of the activity. Example: 58', IS_SEGMENT_ACTIVE BOOLEAN COMMENT 'Flag indicating if the segment is active. Example: true', INSERTIONS VARIANT COMMENT 'Number of insertions in the activity. Example: 50', DELETIONS VARIANT COMMENT 'Number of deletions in the activity. Example: 20', PROJECT_ID VARCHAR(72) COMMENT 'Unique identifier for the project. Example: ''a092M00001IV44YQAT''', PROJECT_SLUG VARCHAR(256) COMMENT 'Slug of the project. Example: ''prometheus''', PROJECT_NAME VARCHAR(256) COMMENT 'Name of the project. Example: ''Prometheus''', PROJECT_LOGO VARCHAR(256) COMMENT 'URL of the project logo. Example: ''https://example.com/project_logo.png''', CM_PROJECT_PARENT_SLUG VARCHAR(256) COMMENT 'Slug of the parent project in Community Management. Example: ''prometheus''', CM_PROJECT_GRANDPARENTS_SLUG VARCHAR(256) COMMENT 'Slug of the grandparent project in Community Management. Example: ''cncf''', ORG_MAPPING_SOURCE VARCHAR(16777216) COMMENT 'datasource used to map org_id to an activity. Example: ''work_history''', ORGANIZATION_ID VARCHAR(256) COMMENT 'ID of the organization mapped to an activity. Example: ''0bbc8250-87e8-11ee-b203-0b25d3e3aad9''', ORGANIZATION_NAME VARCHAR(512) COMMENT 'Name of the organization mapped to an activity', MAPPED_ACCOUNT_SOURCE_NAME VARCHAR(16777216) COMMENT 'Source of the mapped account after processing organization mapping business logic. This is useful for debugging and understanding the mapping logic. Example: ''by_domain''', ACCOUNT_ID VARCHAR(256) COMMENT 'Mapped account identifier. Example: ''acc_246813579''', ACCOUNT_NAME VARCHAR(256) COMMENT 'Name of the mapped account. Example: ''Acme Corporation''', ACCOUNT_LOGO VARCHAR(1024) COMMENT 'URL of the account logo. Example: ''https://example.com/account_logo.png''', ATTRIBUTES VARIANT COMMENT 'JSON object containing additional attributes. Example: ''{\"key\": \"value\"}''', SEGMENT_ID VARCHAR(256) COMMENT 'ID of the segment. Example: ''9b9868aa-729a-4f72-bd5b-63aacafaa5d7''', SEGMENT_SLUG VARCHAR(256) COMMENT 'Slug of the segment. Example: ''prometheus''', URL VARCHAR(512) COMMENT 'URL related to the activity. Example: ''https://github.com/org/repo/pull/123''', IS_MAIN_BRANCH_COMMIT BOOLEAN COMMENT 'Flag indicating if the commit is on the main branch. Example: true', INSIGHTS_METRIC_TYPE VARCHAR(256) COMMENT 'Type of insights metric. Example: ''changeset-created, approved-commit, pull_request-assigned, etc..''', IS_PR_APPROVED BOOLEAN COMMENT 'Flag indicating if the pull request is approved. Example: true', ACTIVITY_TIMEZONE VARCHAR(16777216) COMMENT 'Timezone of the activity. Example: ''UTC+01:00''', IS_BLANK_BODY BOOLEAN COMMENT 'Flag indicating if the activity body is blank. Example: false', STRIPPED_URL VARCHAR(16777216) COMMENT 'Stripped version of the URL. Example: ''github.com/org/repo''', TITLE VARCHAR(131072) COMMENT 'Title of the activity. Example: ''Fix bug in login process''', CREATED_AT TIMESTAMP_TZ(9) COMMENT 'Timestamp when the activity was created. Example: ''2023-04-15 10:00:00''', CREATED_BY_ID VARCHAR(256) COMMENT 'ID of the user who created the activity. Example: ''user_123456''', UPDATED_AT TIMESTAMP_TZ(9) COMMENT 'Timestamp when the activity was last updated. Example: ''2023-04-15 11:30:00''', MAX_ACTIVE_SEGMENTS_TS TIMESTAMP_TZ(9) COMMENT 'Maximum timestamp for active segments. Example: ''2023-04-15 23:59:59''', REGISTRATION_UPDATED_TS TIMESTAMP_TZ(9) COMMENT 'Timestamp when the registration was last updated. Example: ''2023-04-14 15:45:00''', MEMBER_UPDATED_TS TIMESTAMP_TZ(9) COMMENT 'Timestamp when the member information was last updated. Example: ''2023-04-13 09:20:00''', PROJECTS_LAST_MODIFIED_TS TIMESTAMP_TZ(9) COMMENT 'Timestamp when the project was last modified. Example: ''2023-04-12 16:10:00''', MAX_ORGANIZATION_MAPPING_TS TIMESTAMP_TZ(9) COMMENT 'Maximum timestamp for organization mapping. Example: ''2023-04-11 14:30:00''', MAX_DIM_CDEV_ORG_TO_ACCOUNT_ID_TS TIMESTAMP_TZ(9) COMMENT 'Maximum timestamp for organization to account ID mapping. Example: ''2023-04-10 11:00:00''', MAX_DIM_ACCOUNT_ID_MAPPING_TS TIMESTAMP_TZ(9) COMMENT 'Maximum timestamp for account ID mapping. Example: ''2023-04-09 17:45:00''', MAX_FACT_CROWD_DEV_ACTIVITIES_TS TIMESTAMP_TZ(9) COMMENT 'Maximum timestamp for fact table updates. Example: ''2023-04-15 23:59:59''' ) WITH TAG (ANALYTICS.SILVER_FACT.CONTAINS_PII='true', ANALYTICS.SILVER_FACT.DATA_RETENTION='undefined') COMMENT='This table contains detailed information about crowd development activities, including member details, project information, and account mappings. It can be used to analyze: 1. Types and frequency of activities across different projects 2. Member engagement and contribution patterns 3. Geographical distribution of contributors 4. Sentiment associated with various activities 5. Activity trends over time 6. Organization and account-level participation\nForeign keys: - source_id: links to silver_fact_certificates (certificate_id), silver_fact_event_registrations (registration_id), silver_fact_ti_enrollments (enrollment_id) - activity_id: links to silver_fact_code_contributions (activity_id), silver_fact_crowd_dev_sentiment (activity_id), silver_fact_github_stars (activity_id) - repository_url: links to silver_fact_mailing_list_groups (group_slug) - channel: links to silver_fact_mailing_lists (channel_slug)\n'"
    },
    {
        "ddl":"create or replace view ANALYTICS.BRONZE_FIVETRAN_SALESFORCE.ACCOUNTS( ACCOUNT_ID, SFID_B2B, ACCOUNT_NAME, IS_MEMBER, MEMBER_ACCOUNT_TYPE, WEBSITE, DESCRIPTION, ACCOUNTSOURCE, LOGO_URL, INDUSTRY, ACCOUNT_DOMAIN, PHONE, NUMBER_OF_EMPLOYEES, N_EMPLOYEES, NO_OF_EMPLOYESS__C, LAST_EMPLOYEE_SIZE_VERIFIED_DATE, SECTOR, CREATED_BY, LAST_MODIFIED_BY, CREATED_AT, UPDATED_AT, OWNERID, PARENT_ID, GITHUB_ID, CRUNCHBASE_URL, LINKEDIN_URL, COMPANY_TYPE, DOMAIN_ALIASES, IS_ORG_DASHBOARD_ACCOUNT COMMENT 'indicate the customer account of organization dashboard', BILLING_COUNTRY, ALL_WEBSITES COMMENT 'Concatenation of website, account_domain, and domain_aliases. Example: ''github.com, meta.com, github.io''' ) as ( SELECT a.sfid AS account_id, a.sfid_b2b, a.name AS account_name, COALESCE(a.ismember__c, FALSE) AS is_member, a.type AS member_account_type, CASE WHEN a.name = 'Microsoft Bing' THEN 'microsoft.com' WHEN a.name = 'Apple' THEN 'apple.com' WHEN a.name = 'Facebook' THEN 'meta.com' WHEN d.account_id IS NULL THEN a.website END AS website, a.description, a.accountsource, a.logo_url__c AS logo_url, a.industry, a.account_domain__c AS account_domain, a.phone, a.numberofemployees__c AS number_of_employees, a.numberofemployees AS n_employees, a.no_of_employess__c, a.last_employee_size_verified_date__c AS last_employee_size_verified_date, a.sector__c AS sector, a.createdbyid AS created_by, a.lastmodifiedbyid AS last_modified_by, a.createddate AS created_at, a.lastmodifieddate AS updated_at, a.ownerid, a.parentid AS parent_id, a.github_id__pc AS github_id, a.crunchbase_url__c AS crunchbase_url, a.account_linkedin_url__c AS linkedin_url, a.company_type__c AS company_type, -- If it's not actually github then don't use the github style domain aliases IFF(a.sfid != '0014100000TdzZhAAJ' AND a.domain_alias__c ILIKE '%github%', NULL, IFF(d.account_id IS NULL, a.domain_alias__c, NULL)) AS domain_aliases, IFF(a.type = 'Customer' AND a.ismember__c = TRUE AND a.recordtypeid IN ('01241000000bkf1AAA', '01241000001E1xlAAC'), TRUE, FALSE) AS is_org_dashboard_account, CASE WHEN a.billingcountry ILIKE '%Ukraine%' THEN 'Ukraine' WHEN a.billingcountry ILIKE '%UK%' THEN 'United Kingdom' WHEN a.billingcountry ILIKE ANY ('%France%', '%French%') THEN 'France' WHEN a.billingcountry ILIKE ANY ('%U.S%', '%United State%', 'USA%', 'USA%') THEN 'United States' ELSE INITCAP(a.billingcountry) END AS billing_country, NULLIF( TRIM( CONCAT_WS(     ',',     NULLIF(website, ''),     NULLIF(account_domain, ''),     NULLIF(a.domain_alias__c, '') ) ), '' ) AS all_websites FROM fivetran_ingest.sfdc_connector_prod_salesforce.account a LEFT JOIN ANALYTICS.static._null_out_account_domains d ON a.sfid = d.account_id WHERE NOT a._fivetran_deleted AND NOT a.isdeleted);"
    },
    {
        "question": "what are the top 5 accounts with most activities?",
        "sql": "select aa.account_id, aa.account_name, aa.organization_id, aa.organization_name, sa.is_member, sa.member_account_type, count(distinct aa.member_id) as total_contributors, count(distinct aa.project_id) as total_projects, count(aa.activity_id) as total_activities, array_agg(distinct aa.project_name) as project_names, from analytics.silver_fact.crowd_dev_activities aa left join analytics.bronze_fivetran_salesforce.accounts sa on aa.account_id = sa.account_id where 1=1 and aa.account_id is not null group by all order by total_activities desc limit 5"
    },
    {
        "ddl": "create or replace TABLE ANALYTICS.PLATINUM_ORGANIZATION_DASHBOARD.MEMBER_CONTRIBUTIONS ( _KEY VARCHAR(32) COMMENT 'Unique key', MEMBER_ID VARCHAR(256) COMMENT 'cdev member id', MEMBER_DISPLAY_NAME VARCHAR(1024) COMMENT 'cdev member display name', LFX_USER_ID VARCHAR(72) COMMENT 'Field defines member''s lfx user id', USER_NAME VARCHAR(1020) COMMENT 'User name is retrieved by user''s lfid or github id, It may be null', USER_PHOTO_URL VARCHAR(16777216) COMMENT 'cdev member logo url', GITHUB VARCHAR(16777216) COMMENT 'cdev member github id', LINKEDIN VARCHAR(16777216) COMMENT 'cdev member linkedin id', TWITTER VARCHAR(16777216) COMMENT 'cdev member twitter id', COUNTRY VARCHAR(16777216) COMMENT 'cdev member country name', MEMBER_EMAIL VARCHAR(16777216) COMMENT 'cdev member email id', JOB_TITLE VARCHAR(1020) COMMENT 'Job title is collected by member organizations, latest job title', ORG_AFFILIATION ARRAY COMMENT 'Org affiliation is a array object containing member''s organization work history', ACCOUNT_ID VARCHAR(256) COMMENT 'lf account id', ACCOUNT_NAME VARCHAR(256) COMMENT 'lf account name', ORGANIZATION_LOGO VARCHAR(256) COMMENT 'Contains organization logo', PARENT_ID VARCHAR(72) COMMENT 'Contains conglomerate account group owner id', CONTRIBUTION_COUNT NUMBER(18,0) COMMENT 'The total count of code contributions by member within a organization', COMMIT_COUNT NUMBER(18,0) COMMENT 'The total count of commit activities done by member within a organization', MAINTAIN_COUNT NUMBER(18,0) COMMENT 'The total count of code maintain activities done by member within a organization', REVIEW_COUNT NUMBER(18,0) COMMENT 'The total count of code review activities done by member within a organization', IS_COMMITTER BOOLEAN COMMENT 'The flag indicates the member is committer or not', IS_MAINTAINER BOOLEAN COMMENT 'The flag indicates the member is maintainer or not', IS_REVIEWER BOOLEAN COMMENT 'The flag indicates the member is reviewer or not', IS_CONTRIBUTOR BOOLEAN COMMENT 'The flag indicates the member is contributor or not', MOST_ACTIVE_PROJECT VARCHAR(256) COMMENT 'Most active project defines the project name having most contributions by user for single account, for EX: ''Yocto Project''', MOST_ACTIVE_FOUNDATION VARCHAR(256) COMMENT 'Most active foundation defines the foundation name having most contributions by user for single account, for EX: ''The Linux Foundation''', ACCOUNT_GROUP_MOST_ACTIVE_PROJECT VARCHAR(256) COMMENT 'Account group most active project defines the project name having most contributions by user for account group, for EX: ''Yocto Project''', ACCOUNT_GROUP_MOST_ACTIVE_FOUNDATION VARCHAR(256) COMMENT 'Account group most active foundation defines the foundation name having most contributions by user for account group, for EX: ''The Linux Foundation''', HIGHEST_TYPE VARCHAR(10) COMMENT 'Highest type defines the contributiors highest activity type, for EX: [Maintainer, Reviewer, Committer, Other]', LAST_ACTIVITY_TS TIMESTAMP_TZ(9) COMMENT 'Contains last activity timestamp', IS_CURRENT_EMPLOYER BOOLEAN COMMENT 'is current employer indicates wether the organization is current employer to this user', TIME_RANGE_NAME VARCHAR(9) COMMENT 'Time range for project contribution page like 2024, 2023, alltime etc' )COMMENT='Contains member code contribution wihtout aggregation of project';"
    },
    {
        "question": "what are the top contributions over all time for red hat?",
        "sql": " SELECT  member_id, member_display_name, LFX_USER_ID, user_name, user_photo_url, github, member_email, job_title, org_affiliation, account_id, account_name, contribution_count, commit_count, maintain_count, review_count, is_committer, most_active_project, is_current_employer FROM analytics.PLATINUM_ORGANIZATION_DASHBOARD.MEMBER_CONTRIBUTIONS mc WHERE 1=1 and TIME_RANGE_NAME = 'alltime' AND IS_CURRENT_EMPLOYER = TRUE and account_name ilike '%red hat%' ORDER BY CONTRIBUTION_COUNT DESC"
    }
]